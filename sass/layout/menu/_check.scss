@use '../../utils/variables/var-general' as vg;
@use '../../utils/variables/var-menu' as vm;
@use '../../utils/mixins' as mix;

.check {
    @include mix.flex('', center, center);
    flex-shrink: 0;
    position: relative;
    width: 0;  
    font-size: vm.$size-check--icon;
    color: white;
    background-color: vg.$color-tertiary;
    // Slide out to the right
    transition: width vm.$anim-check-duration vm.$anim-check-timing;

    &__icon {
        position: absolute;
        right: calc(vm.$size-check--icon * -1);
        // Icon positioning (out of frame)
        animation: check-position-out vm.$anim-check-duration vm.$anim-check-timing;
    }
}

// =================
//  Hover animation
// =================

// Slide-in from the right
.course:hover .check {
    width: vm.$size-check--course;
    animation: check-slide-in vm.$anim-check-duration vm.$anim-check-timing;

    // Icon positioning (center)
    &__icon {
        right: 50%; 
        transform: translateX(50%); 
        animation: check-position-in vm.$anim-check-duration vm.$anim-check-timing forwards;

        // Rotation
        & > i {
            animation: check-rotate (0.75 * vm.$anim-check-duration) (0.25 * vm.$anim-check-duration) vm.$anim-check-timing forwards;
        }
    }
}

// ==============
//  Keyframes
// ==============

@keyframes check-slide-in {
    from { width: 0; }
    to { width: vm.$size-check--course; }
}

@keyframes check-rotate {
    from { rotate: 1deg; }
    to { rotate: 360deg; }
}

@keyframes check-position-in {
    from {
        right: calc(vm.$size-check--icon * -1);
    }
    to { 
        right: 50%; 
        transform: translateX(50%); 
    }
}

@keyframes check-position-out {
    from { 
        right: 50%; 
        transform: translateX(50%); 
    }
    to {
        right: calc(vm.$size-check--icon * -1);
        transform: translateX(0);
    }
}